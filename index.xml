<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carson Tolleshaug</title><link>https://carson.tolleshaug.org/</link><description>Recent content on Carson Tolleshaug</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Sep 2021 11:00:00 -0700</lastBuildDate><atom:link href="https://carson.tolleshaug.org/index.xml" rel="self" type="application/rss+xml"/><item><title>The Importance of Company Culture</title><link>https://carson.tolleshaug.org/blog/company-culture/</link><pubDate>Mon, 13 Sep 2021 11:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/blog/company-culture/</guid><description>Variety is the spice of life, but consistency makes for the best code. I often find myself trying to strike a balance between being a better teammate and writing better code.</description></item><item><title>Making Your Wrappers Better with Implicit Operators</title><link>https://carson.tolleshaug.org/blog/implicit-wrappers/</link><pubDate>Tue, 24 Aug 2021 11:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/blog/implicit-wrappers/</guid><description>First off, if you don&amp;rsquo;t know what a &amp;ldquo;wrapper&amp;rdquo; class is, you&amp;rsquo;re doing it wrong. But, just to make sure we&amp;rsquo;re on the same page, I&amp;rsquo;ll define it as follows:</description></item><item><title>Why You Should Do CI/CD First</title><link>https://carson.tolleshaug.org/blog/ci-cd-first/</link><pubDate>Mon, 12 Jul 2021 11:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/blog/ci-cd-first/</guid><description>If you&amp;rsquo;re like me, when you start a new project it&amp;rsquo;s tempting to want to dive right into the code. Writing code is the best part of being a developer after all.</description></item><item><title>Responsible Chains</title><link>https://carson.tolleshaug.org/portfolio/responsible-chains/</link><pubDate>Wed, 23 Jun 2021 12:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/portfolio/responsible-chains/</guid><description>ResponsibleChains is a library for easily implementing a chain of responsibility pattern.
After installing the NuGet package, a chain of responsibility can be added to the dependency injection in startup.</description></item><item><title>My Love-Hate Relationship with Copy &amp; Paste</title><link>https://carson.tolleshaug.org/blog/copy-paste/</link><pubDate>Sat, 29 May 2021 11:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/blog/copy-paste/</guid><description>This may come as a shock to my fellow developers, but I&amp;rsquo;m not a big fan of copying and pasting code.
Hot takes aside, I recognize that the copy-paste functionality is a useful tool, which no developer should have to live without, but I&amp;rsquo;ve noticed a trend among my peers that concerns me.</description></item><item><title>This Site</title><link>https://carson.tolleshaug.org/portfolio/this-site/</link><pubDate>Thu, 08 Apr 2021 12:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/portfolio/this-site/</guid><description>This site is built using Hugo, a static site generator that uses Go templates, yaml, and markdown (in addition to the basic html, css, and javascript) to allow for a huge amount of flexibility as far as static sites go.</description></item><item><title>CLImber</title><link>https://carson.tolleshaug.org/portfolio/climber/</link><pubDate>Mon, 18 Jan 2021 12:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/portfolio/climber/</guid><description>CLImber is a ASP.NET web application designed to be run as a configurable server, which will convert incoming REST calls into commands on a command-line interface available on the server.</description></item><item><title>SQL Query Builder</title><link>https://carson.tolleshaug.org/portfolio/sql-query-builder/</link><pubDate>Thu, 13 Sep 2018 12:00:00 -0700</pubDate><guid>https://carson.tolleshaug.org/portfolio/sql-query-builder/</guid><description>SqlQueryBuilder is a .NET nuget package library for writing SQL statements in fluent-style native C# syntax. Ideally, it would be used in conjunction with an ORM like Dapper that takes strings for a sql query.</description></item></channel></rss>